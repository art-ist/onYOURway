//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Data.Entity.Infrastructure.MappingViews;

[assembly: DbMappingViewCacheTypeAttribute(
    typeof(onYOURway.Models.onYOURwayEntities),
    typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsabaec308794d8076a8646471b929464a48ee6aa829d34f80f8af3807141df044))]

namespace Edm_EntityMappingGeneratedViews
{
    using System;
    using System.CodeDom.Compiler;
    using System.Data.Entity.Core.Metadata.Edm;

    /// <summary>
    /// Implements a mapping view cache.
    /// </summary>
    [GeneratedCode("Entity Framework Power Tools", "0.9.0.0")]
    internal sealed class ViewsForBaseEntitySetsabaec308794d8076a8646471b929464a48ee6aa829d34f80f8af3807141df044 : DbMappingViewCache
    {
        /// <summary>
        /// Gets a hash value computed over the mapping closure.
        /// </summary>
        public override string MappingHashValue
        {
            get { return "abaec308794d8076a8646471b929464a48ee6aa829d34f80f8af3807141df044"; }
        }

        /// <summary>
        /// Gets a view corresponding to the specified extent.
        /// </summary>
        /// <param name="extent">The extent.</param>
        /// <returns>The mapping view, or null if the extent is not associated with a mapping view.</returns>
        public override DbMappingView GetView(EntitySetBase extent)
        {
            if (extent == null)
            {
                throw new ArgumentNullException("extent");
            }

            var extentName = extent.EntityContainer.Name + "." + extent.Name;

            if (extentName == "onYOURwayModelStoreContainer.Card")
            {
                return GetView0();
            }

            if (extentName == "onYOURwayModelStoreContainer.ShoppingList")
            {
                return GetView1();
            }

            if (extentName == "onYOURwayModelStoreContainer.UserProfile")
            {
                return GetView2();
            }

            if (extentName == "onYOURwayModelStoreContainer.Location")
            {
                return GetView3();
            }

            if (extentName == "onYOURwayEntities.Cards")
            {
                return GetView4();
            }

            if (extentName == "onYOURwayEntities.ShoppingLists")
            {
                return GetView5();
            }

            if (extentName == "onYOURwayEntities.UserProfiles")
            {
                return GetView6();
            }

            if (extentName == "onYOURwayEntities.MyLocations")
            {
                return GetView7();
            }

            if (extentName == "onYOURwayModelStoreContainer.BikeWay")
            {
                return GetView8();
            }

            if (extentName == "onYOURwayEntities.BikeWays")
            {
                return GetView9();
            }

            if (extentName == "onYOURwayModelStoreContainer.LocationForeignId")
            {
                return GetView10();
            }

            if (extentName == "onYOURwayModelStoreContainer.Partner")
            {
                return GetView11();
            }

            if (extentName == "onYOURwayModelStoreContainer.ProductSuggestion")
            {
                return GetView12();
            }

            if (extentName == "onYOURwayModelStoreContainer.Tag")
            {
                return GetView13();
            }

            if (extentName == "onYOURwayModelStoreContainer.TagName")
            {
                return GetView14();
            }

            if (extentName == "onYOURwayModelStoreContainer.LocationLink")
            {
                return GetView15();
            }

            if (extentName == "onYOURwayModelStoreContainer.Location1")
            {
                return GetView16();
            }

            if (extentName == "onYOURwayModelStoreContainer.LocationAlias")
            {
                return GetView17();
            }

            if (extentName == "onYOURwayModelStoreContainer.TagIsA")
            {
                return GetView18();
            }

            if (extentName == "onYOURwayModelStoreContainer.HasTag")
            {
                return GetView19();
            }

            if (extentName == "onYOURwayEntities.LocationForeignIds")
            {
                return GetView20();
            }

            if (extentName == "onYOURwayEntities.Partners")
            {
                return GetView21();
            }

            if (extentName == "onYOURwayEntities.ProductSuggestions")
            {
                return GetView22();
            }

            if (extentName == "onYOURwayEntities.Tags")
            {
                return GetView23();
            }

            if (extentName == "onYOURwayEntities.TagNames")
            {
                return GetView24();
            }

            if (extentName == "onYOURwayEntities.LocationLinks")
            {
                return GetView25();
            }

            if (extentName == "onYOURwayEntities.Locations")
            {
                return GetView26();
            }

            if (extentName == "onYOURwayEntities.LocationAliases")
            {
                return GetView27();
            }

            if (extentName == "onYOURwayEntities.TagIsA")
            {
                return GetView28();
            }

            if (extentName == "onYOURwayEntities.HasTag")
            {
                return GetView29();
            }

            if (extentName == "onYOURwayModelStoreContainer.Region")
            {
                return GetView30();
            }

            if (extentName == "onYOURwayModelStoreContainer.RegionAlias")
            {
                return GetView31();
            }

            if (extentName == "onYOURwayModelStoreContainer.RegionView")
            {
                return GetView32();
            }

            if (extentName == "onYOURwayEntities.Regions")
            {
                return GetView33();
            }

            if (extentName == "onYOURwayEntities.RegionAlias1")
            {
                return GetView34();
            }

            if (extentName == "onYOURwayEntities.RegionViews")
            {
                return GetView35();
            }

            if (extentName == "onYOURwayModelStoreContainer.TransportLine")
            {
                return GetView36();
            }

            if (extentName == "onYOURwayEntities.TransportLines")
            {
                return GetView37();
            }

            if (extentName == "onYOURwayModelStoreContainer.TransportStop")
            {
                return GetView38();
            }

            if (extentName == "onYOURwayEntities.TransportStops")
            {
                return GetView39();
            }

            if (extentName == "onYOURwayModelStoreContainer.Membership")
            {
                return GetView40();
            }

            if (extentName == "onYOURwayEntities.Memberships")
            {
                return GetView41();
            }

            if (extentName == "onYOURwayModelStoreContainer.OAuthMembership")
            {
                return GetView42();
            }

            if (extentName == "onYOURwayEntities.OAuthMemberships")
            {
                return GetView43();
            }

            if (extentName == "onYOURwayModelStoreContainer.Role")
            {
                return GetView44();
            }

            if (extentName == "onYOURwayEntities.Roles")
            {
                return GetView45();
            }

            if (extentName == "onYOURwayModelStoreContainer.Street")
            {
                return GetView46();
            }

            if (extentName == "onYOURwayEntities.Streets")
            {
                return GetView47();
            }

            return null;
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.Card.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView0()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Card
        [onYOURwayModel.Store.Card](T1.Card_UserId, T1.Card_LocationId, T1.Card_TagId)
    FROM (
        SELECT 
            T.UserId AS Card_UserId, 
            T.LocationId AS Card_LocationId, 
            T.TagId AS Card_TagId, 
            True AS _from0
        FROM onYOURwayEntities.Cards AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.ShoppingList.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView1()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ShoppingList
        [onYOURwayModel.Store.ShoppingList](T1.ShoppingList_UserId, T1.ShoppingList_LocationId, T1.ShoppingList_Item, T1.ShoppingList_Checked)
    FROM (
        SELECT 
            T.UserId AS ShoppingList_UserId, 
            T.LocationId AS ShoppingList_LocationId, 
            T.Item AS ShoppingList_Item, 
            T.Checked AS ShoppingList_Checked, 
            True AS _from0
        FROM onYOURwayEntities.ShoppingLists AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.UserProfile.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView2()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserProfile
        [onYOURwayModel.Store.UserProfile](T1.UserProfile_UserId, T1.UserProfile_UserName, T1.UserProfile_FirstName, T1.UserProfile_LastName, T1.UserProfile_Email)
    FROM (
        SELECT 
            T.UserId AS UserProfile_UserId, 
            T.UserName AS UserProfile_UserName, 
            T.FirstName AS UserProfile_FirstName, 
            T.LastName AS UserProfile_LastName, 
            T.Email AS UserProfile_Email, 
            True AS _from0
        FROM onYOURwayEntities.UserProfiles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.Location.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView3()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Location
        [onYOURwayModel.Store.Location](T1.Location_UserId, T1.Location_LocationId, T1.Location_ListOrder)
    FROM (
        SELECT 
            T.UserId AS Location_UserId, 
            T.LocationId AS Location_LocationId, 
            T.ListOrder AS Location_ListOrder, 
            True AS _from0
        FROM onYOURwayEntities.MyLocations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.Cards.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView4()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Cards
        [onYOURwayModel.Card](T1.Card_UserId, T1.Card_LocationId, T1.Card_TagId)
    FROM (
        SELECT 
            T.UserId AS Card_UserId, 
            T.LocationId AS Card_LocationId, 
            T.TagId AS Card_TagId, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.Card AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.ShoppingLists.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView5()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ShoppingLists
        [onYOURwayModel.ShoppingList](T1.ShoppingList_UserId, T1.ShoppingList_LocationId, T1.ShoppingList_Item, T1.ShoppingList_Checked)
    FROM (
        SELECT 
            T.UserId AS ShoppingList_UserId, 
            T.LocationId AS ShoppingList_LocationId, 
            T.Item AS ShoppingList_Item, 
            T.Checked AS ShoppingList_Checked, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.ShoppingList AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.UserProfiles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView6()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing UserProfiles
        [onYOURwayModel.UserProfile](T1.UserProfile_UserId, T1.UserProfile_UserName, T1.UserProfile_FirstName, T1.UserProfile_LastName, T1.UserProfile_Email)
    FROM (
        SELECT 
            T.UserId AS UserProfile_UserId, 
            T.UserName AS UserProfile_UserName, 
            T.FirstName AS UserProfile_FirstName, 
            T.LastName AS UserProfile_LastName, 
            T.Email AS UserProfile_Email, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.UserProfile AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.MyLocations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView7()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing MyLocations
        [onYOURwayModel.MyLocation](T1.MyLocation_UserId, T1.MyLocation_LocationId, T1.MyLocation_ListOrder)
    FROM (
        SELECT 
            T.UserId AS MyLocation_UserId, 
            T.LocationId AS MyLocation_LocationId, 
            T.ListOrder AS MyLocation_ListOrder, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.Location AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.BikeWay.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView8()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing BikeWay
        [onYOURwayModel.Store.BikeWay](T1.BikeWay_Id, T1.BikeWay_Name, T1.BikeWay_Way, T1.BikeWay_Mode)
    FROM (
        SELECT 
            T.Id AS BikeWay_Id, 
            T.Name AS BikeWay_Name, 
            T.Way AS BikeWay_Way, 
            T.Mode AS BikeWay_Mode, 
            True AS _from0
        FROM onYOURwayEntities.BikeWays AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.BikeWays.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView9()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing BikeWays
        [onYOURwayModel.BikeWay](T1.BikeWay_Id, T1.BikeWay_Name, T1.BikeWay_Way, T1.BikeWay_Mode)
    FROM (
        SELECT 
            T.Id AS BikeWay_Id, 
            T.Name AS BikeWay_Name, 
            T.Way AS BikeWay_Way, 
            T.Mode AS BikeWay_Mode, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.BikeWay AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.LocationForeignId.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView10()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LocationForeignId
        [onYOURwayModel.Store.LocationForeignId](T1.LocationForeignId_LocationId, T1.LocationForeignId_PartnerId, T1.LocationForeignId_ForeignId)
    FROM (
        SELECT 
            T.LocationId AS LocationForeignId_LocationId, 
            T.PartnerId AS LocationForeignId_PartnerId, 
            T.ForeignId AS LocationForeignId_ForeignId, 
            True AS _from0
        FROM onYOURwayEntities.LocationForeignIds AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.Partner.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView11()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Partner
        [onYOURwayModel.Store.Partner](T1.Partner_Id, T1.Partner_Name, T1.Partner_Website)
    FROM (
        SELECT 
            T.Id AS Partner_Id, 
            T.Name AS Partner_Name, 
            T.Website AS Partner_Website, 
            True AS _from0
        FROM onYOURwayEntities.Partners AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.ProductSuggestion.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView12()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductSuggestion
        [onYOURwayModel.Store.ProductSuggestion](T1.ProductSuggestion_LocationId, T1.ProductSuggestion_Item, T1.ProductSuggestion_UsageCount)
    FROM (
        SELECT 
            T.LocationId AS ProductSuggestion_LocationId, 
            T.Item AS ProductSuggestion_Item, 
            T.UsageCount AS ProductSuggestion_UsageCount, 
            True AS _from0
        FROM onYOURwayEntities.ProductSuggestions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.Tag.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView13()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tag
        [onYOURwayModel.Store.Tag](T1.Tag_Id, T1.Tag_Type, T1.Tag_CssClass, T1.Tag_Icon, T1.Tag_Values, T1.Tag_ForeignId)
    FROM (
        SELECT 
            T.Id AS Tag_Id, 
            T.Type AS Tag_Type, 
            T.CssClass AS Tag_CssClass, 
            T.Icon AS Tag_Icon, 
            T.Values AS Tag_Values, 
            T.ForeignId AS Tag_ForeignId, 
            True AS _from0
        FROM onYOURwayEntities.Tags AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.TagName.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView14()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TagName
        [onYOURwayModel.Store.TagName](T1.TagName_TagId, T1.TagName_Lang, T1.TagName_Name, T1.TagName_Show)
    FROM (
        SELECT 
            T.TagId AS TagName_TagId, 
            T.Lang AS TagName_Lang, 
            T.Name AS TagName_Name, 
            T.Show AS TagName_Show, 
            True AS _from0
        FROM onYOURwayEntities.TagNames AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.LocationLink.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView15()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LocationLink
        [onYOURwayModel.Store.LocationLink](T1.LocationLink_Id, T1.LocationLink_LocationId, T1.LocationLink_Lang, T1.LocationLink_Tag, T1.LocationLink_URL)
    FROM (
        SELECT 
            T.Id AS LocationLink_Id, 
            T.LocationId AS LocationLink_LocationId, 
            T.Lang AS LocationLink_Lang, 
            T.Tag AS LocationLink_Tag, 
            T.URL AS LocationLink_URL, 
            True AS _from0
        FROM onYOURwayEntities.LocationLinks AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.Location1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView16()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Location1
        [onYOURwayModel.Store.Location1](T1.Location1_Id, T1.Location1_Name, T1.Location1_Lang, T1.Location1_Country, T1.Location1_Province, T1.Location1_City, T1.Location1_Zip, T1.Location1_Street, T1.Location1_HouseNumber, T1.Location1_Phone, T1.Location1_CreatedBy, T1.Location1_CreatedAt, T1.Location1_ModifiedBy, T1.Location1_ModifiedAt, T1.Location1_Position, T1.Location1_Icon, T1.Location1_OpeningHours, T1.Location1_Description)
    FROM (
        SELECT 
            T.Id AS Location1_Id, 
            T.Name AS Location1_Name, 
            T.Lang AS Location1_Lang, 
            T.Country AS Location1_Country, 
            T.Province AS Location1_Province, 
            T.City AS Location1_City, 
            T.Zip AS Location1_Zip, 
            T.Street AS Location1_Street, 
            T.HouseNumber AS Location1_HouseNumber, 
            T.Phone AS Location1_Phone, 
            T.CreatedBy AS Location1_CreatedBy, 
            T.CreatedAt AS Location1_CreatedAt, 
            T.ModifiedBy AS Location1_ModifiedBy, 
            T.ModifiedAt AS Location1_ModifiedAt, 
            T.Position AS Location1_Position, 
            T.Icon AS Location1_Icon, 
            T.OpeningHours AS Location1_OpeningHours, 
            T.Description AS Location1_Description, 
            True AS _from0
        FROM onYOURwayEntities.Locations AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.LocationAlias.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView17()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LocationAlias
        [onYOURwayModel.Store.LocationAlias](T1.LocationAlias_LocationId, T1.LocationAlias_Lang, T1.LocationAlias_Name, T1.LocationAlias_Id)
    FROM (
        SELECT 
            T.LocationId AS LocationAlias_LocationId, 
            T.Lang AS LocationAlias_Lang, 
            T.Name AS LocationAlias_Name, 
            T.Id AS LocationAlias_Id, 
            True AS _from0
        FROM onYOURwayEntities.LocationAliases AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.TagIsA.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView18()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TagIsA
        [onYOURwayModel.Store.TagIsA](T1.TagIsA_TagId, T1.TagIsA_ParentId)
    FROM (
        SELECT 
            Key(T.Tag).Id AS TagIsA_TagId, 
            Key(T.Parent).Id AS TagIsA_ParentId, 
            True AS _from0
        FROM onYOURwayEntities.TagIsA AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.HasTag.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView19()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HasTag
        [onYOURwayModel.Store.HasTag](T1.HasTag_LocationId, T1.HasTag_TagId)
    FROM (
        SELECT 
            Key(T.Location).Id AS HasTag_LocationId, 
            Key(T.Tag).Id AS HasTag_TagId, 
            True AS _from0
        FROM onYOURwayEntities.HasTag AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.LocationForeignIds.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView20()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LocationForeignIds
        [onYOURwayModel.LocationForeignId](T1.LocationForeignId_LocationId, T1.LocationForeignId_PartnerId, T1.LocationForeignId_ForeignId)
    FROM (
        SELECT 
            T.LocationId AS LocationForeignId_LocationId, 
            T.PartnerId AS LocationForeignId_PartnerId, 
            T.ForeignId AS LocationForeignId_ForeignId, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.LocationForeignId AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.Partners.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView21()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Partners
        [onYOURwayModel.Partner](T1.Partner_Id, T1.Partner_Name, T1.Partner_Website)
    FROM (
        SELECT 
            T.Id AS Partner_Id, 
            T.Name AS Partner_Name, 
            T.Website AS Partner_Website, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.Partner AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.ProductSuggestions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView22()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing ProductSuggestions
        [onYOURwayModel.ProductSuggestion](T1.ProductSuggestion_LocationId, T1.ProductSuggestion_Item, T1.ProductSuggestion_UsageCount)
    FROM (
        SELECT 
            T.LocationId AS ProductSuggestion_LocationId, 
            T.Item AS ProductSuggestion_Item, 
            T.UsageCount AS ProductSuggestion_UsageCount, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.ProductSuggestion AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.Tags.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView23()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Tags
        [onYOURwayModel.Tag](T1.Tag_Id, T1.Tag_Type, T1.Tag_CssClass, T1.Tag_Icon, T1.Tag_Values, T1.Tag_ForeignId)
    FROM (
        SELECT 
            T.Id AS Tag_Id, 
            T.Type AS Tag_Type, 
            T.CssClass AS Tag_CssClass, 
            T.Icon AS Tag_Icon, 
            T.Values AS Tag_Values, 
            T.ForeignId AS Tag_ForeignId, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.Tag AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.TagNames.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView24()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TagNames
        [onYOURwayModel.TagName](T1.TagName_TagId, T1.TagName_Lang, T1.TagName_Name, T1.TagName_Show)
    FROM (
        SELECT 
            T.TagId AS TagName_TagId, 
            T.Lang AS TagName_Lang, 
            T.Name AS TagName_Name, 
            T.Show AS TagName_Show, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.TagName AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.LocationLinks.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView25()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LocationLinks
        [onYOURwayModel.LocationLink](T1.LocationLink_Id, T1.LocationLink_LocationId, T1.LocationLink_Lang, T1.LocationLink_Tag, T1.LocationLink_URL)
    FROM (
        SELECT 
            T.Id AS LocationLink_Id, 
            T.LocationId AS LocationLink_LocationId, 
            T.Lang AS LocationLink_Lang, 
            T.Tag AS LocationLink_Tag, 
            T.URL AS LocationLink_URL, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.LocationLink AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.Locations.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView26()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Locations
        [onYOURwayModel.Location](T1.Location_Id, T1.Location_Name, T1.Location_Lang, T1.Location_Country, T1.Location_Province, T1.Location_City, T1.Location_Zip, T1.Location_Street, T1.Location_HouseNumber, T1.Location_Phone, T1.Location_CreatedBy, T1.Location_CreatedAt, T1.Location_ModifiedBy, T1.Location_ModifiedAt, T1.Location_Position, T1.Location_Icon, T1.Location_OpeningHours, T1.Location_Description)
    FROM (
        SELECT 
            T.Id AS Location_Id, 
            T.Name AS Location_Name, 
            T.Lang AS Location_Lang, 
            T.Country AS Location_Country, 
            T.Province AS Location_Province, 
            T.City AS Location_City, 
            T.Zip AS Location_Zip, 
            T.Street AS Location_Street, 
            T.HouseNumber AS Location_HouseNumber, 
            T.Phone AS Location_Phone, 
            T.CreatedBy AS Location_CreatedBy, 
            T.CreatedAt AS Location_CreatedAt, 
            T.ModifiedBy AS Location_ModifiedBy, 
            T.ModifiedAt AS Location_ModifiedAt, 
            T.Position AS Location_Position, 
            T.Icon AS Location_Icon, 
            T.OpeningHours AS Location_OpeningHours, 
            T.Description AS Location_Description, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.Location1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.LocationAliases.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView27()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing LocationAliases
        [onYOURwayModel.LocationAlias](T1.LocationAlias_LocationId, T1.LocationAlias_Lang, T1.LocationAlias_Name, T1.LocationAlias_Id)
    FROM (
        SELECT 
            T.LocationId AS LocationAlias_LocationId, 
            T.Lang AS LocationAlias_Lang, 
            T.Name AS LocationAlias_Name, 
            T.Id AS LocationAlias_Id, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.LocationAlias AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.TagIsA.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView28()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TagIsA
        [onYOURwayModel.TagIsA](T3.TagIsA_Tag, T3.TagIsA_Parent)
    FROM (
        SELECT -- Constructing Tag
            CreateRef(onYOURwayEntities.Tags, row(T2.TagIsA_Tag_Id), [onYOURwayModel.Tag]) AS TagIsA_Tag, 
            T2.TagIsA_Parent
        FROM (
            SELECT -- Constructing Parent
                T1.TagIsA_Tag_Id, 
                CreateRef(onYOURwayEntities.Tags, row(T1.TagIsA_Parent_Id), [onYOURwayModel.Tag]) AS TagIsA_Parent
            FROM (
                SELECT 
                    T.TagId AS TagIsA_Tag_Id, 
                    T.ParentId AS TagIsA_Parent_Id, 
                    True AS _from0
                FROM onYOURwayModelStoreContainer.TagIsA AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.HasTag.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView29()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing HasTag
        [onYOURwayModel.HasTag](T3.HasTag_Location, T3.HasTag_Tag)
    FROM (
        SELECT -- Constructing Location
            CreateRef(onYOURwayEntities.Locations, row(T2.HasTag_Location_Id), [onYOURwayModel.Location]) AS HasTag_Location, 
            T2.HasTag_Tag
        FROM (
            SELECT -- Constructing Tag
                T1.HasTag_Location_Id, 
                CreateRef(onYOURwayEntities.Tags, row(T1.HasTag_Tag_Id), [onYOURwayModel.Tag]) AS HasTag_Tag
            FROM (
                SELECT 
                    T.LocationId AS HasTag_Location_Id, 
                    T.TagId AS HasTag_Tag_Id, 
                    True AS _from0
                FROM onYOURwayModelStoreContainer.HasTag AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.Region.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView30()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Region
        [onYOURwayModel.Store.Region](T1.Region_Id, T1.Region_Name, T1.Region_Website, T1.Region_OsmRelationId, T1.Region_CreatedBy, T1.Region_CreatedAt, T1.Region_ModifiedBy, T1.Region_ModifiedAt, T1.Region_Boundary)
    FROM (
        SELECT 
            T.Id AS Region_Id, 
            T.Name AS Region_Name, 
            T.Website AS Region_Website, 
            T.OsmRelationId AS Region_OsmRelationId, 
            T.CreatedBy AS Region_CreatedBy, 
            T.CreatedAt AS Region_CreatedAt, 
            T.ModifiedBy AS Region_ModifiedBy, 
            T.ModifiedAt AS Region_ModifiedAt, 
            T.Boundary AS Region_Boundary, 
            True AS _from0
        FROM onYOURwayEntities.Regions AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.RegionAlias.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView31()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RegionAlias
        [onYOURwayModel.Store.RegionAlias](T1.RegionAlias_RegionId, T1.RegionAlias_Lang, T1.RegionAlias_Name, T1.RegionAlias_Website)
    FROM (
        SELECT 
            T.RegionId AS RegionAlias_RegionId, 
            T.Lang AS RegionAlias_Lang, 
            T.Name AS RegionAlias_Name, 
            T.Website AS RegionAlias_Website, 
            True AS _from0
        FROM onYOURwayEntities.RegionAlias1 AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.RegionView.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView32()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RegionView
        [onYOURwayModel.Store.RegionView](T1.RegionView_RegionId, T1.RegionView_ViewId, T1.RegionView_Name, T1.RegionView_ListOrder, T1.RegionView_Boundary)
    FROM (
        SELECT 
            T.RegionId AS RegionView_RegionId, 
            T.ViewId AS RegionView_ViewId, 
            T.Name AS RegionView_Name, 
            T.ListOrder AS RegionView_ListOrder, 
            T.Boundary AS RegionView_Boundary, 
            True AS _from0
        FROM onYOURwayEntities.RegionViews AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.Regions.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView33()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Regions
        [onYOURwayModel.Region](T1.Region_Id, T1.Region_Name, T1.Region_Website, T1.Region_OsmRelationId, T1.Region_CreatedBy, T1.Region_CreatedAt, T1.Region_ModifiedBy, T1.Region_ModifiedAt, T1.Region_Boundary)
    FROM (
        SELECT 
            T.Id AS Region_Id, 
            T.Name AS Region_Name, 
            T.Website AS Region_Website, 
            T.OsmRelationId AS Region_OsmRelationId, 
            T.CreatedBy AS Region_CreatedBy, 
            T.CreatedAt AS Region_CreatedAt, 
            T.ModifiedBy AS Region_ModifiedBy, 
            T.ModifiedAt AS Region_ModifiedAt, 
            T.Boundary AS Region_Boundary, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.Region AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.RegionAlias1.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView34()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RegionAlias1
        [onYOURwayModel.RegionAlias](T1.RegionAlias_RegionId, T1.RegionAlias_Lang, T1.RegionAlias_Name, T1.RegionAlias_Website)
    FROM (
        SELECT 
            T.RegionId AS RegionAlias_RegionId, 
            T.Lang AS RegionAlias_Lang, 
            T.Name AS RegionAlias_Name, 
            T.Website AS RegionAlias_Website, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.RegionAlias AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.RegionViews.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView35()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing RegionViews
        [onYOURwayModel.RegionView](T1.RegionView_RegionId, T1.RegionView_ViewId, T1.RegionView_Name, T1.RegionView_ListOrder, T1.RegionView_Boundary)
    FROM (
        SELECT 
            T.RegionId AS RegionView_RegionId, 
            T.ViewId AS RegionView_ViewId, 
            T.Name AS RegionView_Name, 
            T.ListOrder AS RegionView_ListOrder, 
            T.Boundary AS RegionView_Boundary, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.RegionView AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.TransportLine.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView36()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TransportLine
        [onYOURwayModel.Store.TransportLine](T1.TransportLine_Id, T1.TransportLine_Name, T1.TransportLine_Ref, T1.TransportLine_From, T1.TransportLine_To, T1.TransportLine_Mode, T1.TransportLine_Network, T1.TransportLine_Operator, T1.TransportLine_Color, T1.TransportLine_Way)
    FROM (
        SELECT 
            T.Id AS TransportLine_Id, 
            T.Name AS TransportLine_Name, 
            T.[Ref] AS TransportLine_Ref, 
            T.[From] AS TransportLine_From, 
            T.To AS TransportLine_To, 
            T.Mode AS TransportLine_Mode, 
            T.Network AS TransportLine_Network, 
            T.Operator AS TransportLine_Operator, 
            T.Color AS TransportLine_Color, 
            T.Way AS TransportLine_Way, 
            True AS _from0
        FROM onYOURwayEntities.TransportLines AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.TransportLines.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView37()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TransportLines
        [onYOURwayModel.TransportLine](T1.TransportLine_Id, T1.TransportLine_Name, T1.TransportLine_Ref, T1.TransportLine_From, T1.TransportLine_To, T1.TransportLine_Mode, T1.TransportLine_Network, T1.TransportLine_Operator, T1.TransportLine_Color, T1.TransportLine_Way)
    FROM (
        SELECT 
            T.Id AS TransportLine_Id, 
            T.Name AS TransportLine_Name, 
            T.[Ref] AS TransportLine_Ref, 
            T.[From] AS TransportLine_From, 
            T.To AS TransportLine_To, 
            T.Mode AS TransportLine_Mode, 
            T.Network AS TransportLine_Network, 
            T.Operator AS TransportLine_Operator, 
            T.Color AS TransportLine_Color, 
            T.Way AS TransportLine_Way, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.TransportLine AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.TransportStop.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView38()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TransportStop
        [onYOURwayModel.Store.TransportStop](T1.TransportStop_Id, T1.TransportStop_LineIds, T1.TransportStop_Name, T1.TransportStop_Position)
    FROM (
        SELECT 
            T.Id AS TransportStop_Id, 
            T.LineIds AS TransportStop_LineIds, 
            T.Name AS TransportStop_Name, 
            T.Position AS TransportStop_Position, 
            True AS _from0
        FROM onYOURwayEntities.TransportStops AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.TransportStops.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView39()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing TransportStops
        [onYOURwayModel.TransportStop](T1.TransportStop_Id, T1.TransportStop_LineIds, T1.TransportStop_Name, T1.TransportStop_Position)
    FROM (
        SELECT 
            T.Id AS TransportStop_Id, 
            T.LineIds AS TransportStop_LineIds, 
            T.Name AS TransportStop_Name, 
            T.Position AS TransportStop_Position, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.TransportStop AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.Membership.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView40()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Membership
        [onYOURwayModel.Store.Membership](T1.Membership_UserId, T1.Membership_CreateDate, T1.Membership_ConfirmationToken, T1.Membership_IsConfirmed, T1.Membership_LastPasswordFailureDate, T1.Membership_PasswordFailuresSinceLastSuccess, T1.Membership_Password, T1.Membership_PasswordChangedDate, T1.Membership_PasswordSalt, T1.Membership_PasswordVerificationToken, T1.Membership_PasswordVerificationTokenExpirationDate)
    FROM (
        SELECT 
            T.UserId AS Membership_UserId, 
            T.CreateDate AS Membership_CreateDate, 
            T.ConfirmationToken AS Membership_ConfirmationToken, 
            T.IsConfirmed AS Membership_IsConfirmed, 
            T.LastPasswordFailureDate AS Membership_LastPasswordFailureDate, 
            T.PasswordFailuresSinceLastSuccess AS Membership_PasswordFailuresSinceLastSuccess, 
            T.Password AS Membership_Password, 
            T.PasswordChangedDate AS Membership_PasswordChangedDate, 
            T.PasswordSalt AS Membership_PasswordSalt, 
            T.PasswordVerificationToken AS Membership_PasswordVerificationToken, 
            T.PasswordVerificationTokenExpirationDate AS Membership_PasswordVerificationTokenExpirationDate, 
            True AS _from0
        FROM onYOURwayEntities.Memberships AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.Memberships.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView41()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Memberships
        [onYOURwayModel.Membership](T1.Membership_UserId, T1.Membership_CreateDate, T1.Membership_ConfirmationToken, T1.Membership_IsConfirmed, T1.Membership_LastPasswordFailureDate, T1.Membership_PasswordFailuresSinceLastSuccess, T1.Membership_Password, T1.Membership_PasswordChangedDate, T1.Membership_PasswordSalt, T1.Membership_PasswordVerificationToken, T1.Membership_PasswordVerificationTokenExpirationDate)
    FROM (
        SELECT 
            T.UserId AS Membership_UserId, 
            T.CreateDate AS Membership_CreateDate, 
            T.ConfirmationToken AS Membership_ConfirmationToken, 
            T.IsConfirmed AS Membership_IsConfirmed, 
            T.LastPasswordFailureDate AS Membership_LastPasswordFailureDate, 
            T.PasswordFailuresSinceLastSuccess AS Membership_PasswordFailuresSinceLastSuccess, 
            T.Password AS Membership_Password, 
            T.PasswordChangedDate AS Membership_PasswordChangedDate, 
            T.PasswordSalt AS Membership_PasswordSalt, 
            T.PasswordVerificationToken AS Membership_PasswordVerificationToken, 
            T.PasswordVerificationTokenExpirationDate AS Membership_PasswordVerificationTokenExpirationDate, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.Membership AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.OAuthMembership.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView42()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OAuthMembership
        [onYOURwayModel.Store.OAuthMembership](T1.OAuthMembership_Provider, T1.OAuthMembership_ProviderUserId, T1.OAuthMembership_UserId)
    FROM (
        SELECT 
            T.Provider AS OAuthMembership_Provider, 
            T.ProviderUserId AS OAuthMembership_ProviderUserId, 
            T.UserId AS OAuthMembership_UserId, 
            True AS _from0
        FROM onYOURwayEntities.OAuthMemberships AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.OAuthMemberships.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView43()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing OAuthMemberships
        [onYOURwayModel.OAuthMembership](T1.OAuthMembership_Provider, T1.OAuthMembership_ProviderUserId, T1.OAuthMembership_UserId)
    FROM (
        SELECT 
            T.Provider AS OAuthMembership_Provider, 
            T.ProviderUserId AS OAuthMembership_ProviderUserId, 
            T.UserId AS OAuthMembership_UserId, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.OAuthMembership AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.Role.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView44()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Role
        [onYOURwayModel.Store.Role](T1.Role_RoleId, T1.Role_RoleName)
    FROM (
        SELECT 
            T.RoleId AS Role_RoleId, 
            T.RoleName AS Role_RoleName, 
            True AS _from0
        FROM onYOURwayEntities.Roles AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.Roles.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView45()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Roles
        [onYOURwayModel.Role](T1.Role_RoleId, T1.Role_RoleName)
    FROM (
        SELECT 
            T.RoleId AS Role_RoleId, 
            T.RoleName AS Role_RoleName, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.Role AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayModelStoreContainer.Street.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView46()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Street
        [onYOURwayModel.Store.Street](T1.Street_RegionId, T1.Street_Name, T1.Street_Way)
    FROM (
        SELECT 
            T.RegionId AS Street_RegionId, 
            T.Name AS Street_Name, 
            T.Way AS Street_Way, 
            True AS _from0
        FROM onYOURwayEntities.Streets AS T
    ) AS T1");
        }

        /// <summary>
        /// Gets the view for onYOURwayEntities.Streets.
        /// </summary>
        /// <returns>The mapping view.</returns>
        private static DbMappingView GetView47()
        {
            return new DbMappingView(@"
    SELECT VALUE -- Constructing Streets
        [onYOURwayModel.Street](T1.Street_RegionId, T1.Street_Name, T1.Street_Way)
    FROM (
        SELECT 
            T.RegionId AS Street_RegionId, 
            T.Name AS Street_Name, 
            T.Way AS Street_Way, 
            True AS _from0
        FROM onYOURwayModelStoreContainer.Street AS T
    ) AS T1");
        }
    }
}
